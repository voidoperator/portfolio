/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 vztest.gltf --transform
*/

import React, { useMemo } from 'react'
import { useGLTF } from '@react-three/drei'
import { useLoader } from '@react-three/fiber'
import * as THREE from 'three'

export function Model(props) {
  // @ts-ignore // TEMP
  const { nodes, materials } = useGLTF('/vztest-transformed.glb')
  const texture = useLoader(THREE.TextureLoader, '/vzbg.jpg')
  const hdrMaterial = useMemo(
    () =>
      new THREE.MeshStandardMaterial({
        map: texture,
      }),
    [texture],
  )
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Genesis3MaleShape1.geometry}
        material={materials.Material}
        transparent={true}
        opacity={0.25}
      />
      <mesh geometry={nodes.rings_small.geometry} material={materials['white material']} />
      <mesh geometry={nodes.rings_small001.geometry} material={materials['white material']} />
      <mesh geometry={nodes.rombs.geometry} material={materials['white material']} />
      <mesh geometry={nodes.rombs001.geometry} material={materials['white material']} />
      <mesh geometry={nodes.rombs002.geometry} material={materials['white material']} />
      <mesh geometry={nodes.rombs003.geometry} material={materials['white material']} />
      <mesh geometry={nodes.rombs006.geometry} material={materials['white material']} />
      <mesh geometry={nodes.rombs007.geometry} material={materials['white material']} />
      <mesh geometry={nodes.star.geometry} material={materials['white material']} />
      <mesh geometry={nodes.sound_heart001.geometry} material={materials['white material']} />
      <mesh geometry={nodes.abstract_01.geometry} material={nodes.abstract_01.material} />
      <mesh geometry={nodes.rombs004.geometry} material={materials['white material']} />
      <mesh geometry={nodes.rombs005.geometry} material={materials['white material']} />
      <mesh geometry={nodes.rombs008.geometry} material={materials['white material']} />
      <mesh geometry={nodes.rombs009.geometry} material={materials['white material']} />
      <mesh geometry={nodes.rombs010.geometry} material={materials['white material']} />
      <mesh geometry={nodes.abstrackt_02001.geometry} material={nodes.abstrackt_02001.material} />
      <mesh geometry={nodes.blobs.geometry} material={nodes.blobs.material} />
      <mesh geometry={nodes.Abstract_big_high.geometry} material={nodes.Abstract_big_high.material} />
      <mesh geometry={nodes.Sphere.geometry} material={hdrMaterial} />
    </group>
  )
}

useGLTF.preload('/vztest-transformed.glb')
